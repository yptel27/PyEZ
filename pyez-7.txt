##############################################################################
#
# Name:   pyez-7
# Author: Yagnesh Patel
# Date:   8/1/19
# Version: 1.0
#
# Description: This script compare configured ospf adjacencies vs adjacencies in Full state on List of routers. 
# 
#              
#
#    Copyright 2019 Juniper Networks, Inc. All rights reserved.
#    Licensed under the Juniper Networks Script Software License (the "License").
#    You may not use this script file except in compliance with the License,
#    which is located at
#    http://www.juniper.net/support/legal/scriptlicense/
#    Unless required by applicable law or otherwise agreed to in writing by the
#    parties, software distributed under the License is distributed on an "AS IS"
#    BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
#    implied.
##############################################################################

from jnpr.junos import Device                              
from jnpr.junos.op.ospf import OspfNeighborTable
import getpass


R1 = "botanix.ultralab.juniper.net"
R2 = "getafix.ultralab.juniper.net"
R3 = "ashburn.ultralab.juniper.net"

USER=input("Enter your SSH username:  ") 
PASSWD=getpass.getpass()


def check_ospf_full_adjacencies(dev, neighbor_count):     
    ospf_table = OspfNeighborTable(dev)    # Create an instance of the Table
    ospf_table.get()                       # Populate the Table
    if len(ospf_table) != neighbor_count:
        return False
    for neighbor in ospf_table:
        if neighbor["ospf_neighbor_state"] != "Full":
            return False
    return True

def str_result(test_result):                               
    return "Success" if test_result else "Fail"

def main():                                                
    with Device(host=R1, user=USER, password=PASSWD) as dev:
        result1 = check_ospf_full_adjacencies(dev, 3)
        print("Test OSPF adjacencies on R1: " + str_result(result1))

    with Device(host=R2, user=USER, password=PASSWD) as dev:
        result2 = check_ospf_full_adjacencies(dev, 3)
        print("Test OSPF adjacencies on R2: " + str_result(result2))

    with Device(host=R3, user=USER, password=PASSWD) as dev:
        result3 = check_ospf_full_adjacencies(dev, 2)
        print("Test OSPF adjacencies on R3: " + str_result(result3))

    print("Script finished its execution.")                               


if __name__ == "__main__":                                 
    main()