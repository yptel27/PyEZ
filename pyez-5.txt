##############################################################################
#
# Name:   pyez-5
# Author: Yagnesh Patel
# Date:   8/1/19
# Version: 1.0
#
# Description: This script pull out the VPLS MAC database from router. 
# Script one by one compare all instances MAC tables and confirm whether or not MAC is present in them.
# Possible improvement/modification: Just report which instance has the MAC. Othewise it should report that MAC was not found.
# 
#              
#
#    Copyright 2019 Juniper Networks, Inc. All rights reserved.
#    Licensed under the Juniper Networks Script Software License (the "License").
#    You may not use this script file except in compliance with the License,
#    which is located at
#    http://www.juniper.net/support/legal/scriptlicense/
#    Unless required by applicable law or otherwise agreed to in writing by the
#    parties, software distributed under the License is distributed on an "AS IS"
#    BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
#    implied.
##############################################################################


from jnpr.junos import Device
import jxmlease
import getpass


hostname=input("Enter router name:  ") 
username=input("Enter your SSH username:  ") 
password=getpass.getpass() 
MAC=input("Enter MAC pattern to be verified:  ") 

   
with Device(host=hostname, user=username, password=password,timeout=300) as dev:
    dev.timeout = 900
    dev.open()
    parser = jxmlease.EtreeParser()
    res = parser(dev.rpc.get_vpls_mac_table())
    for mac_data in res['l2ald-rtb-macdb']['l2ald-mac-entry']:
       if MAC in mac_data['l2-mac-address']:
           print(mac_data['l2-mac-logical-interface'], mac_data['l2-mac-routing-instance'], mac_data['l2-mac-address']) 
       else:
           print(MAC, "Not Found in", mac_data['l2-mac-routing-instance'])







    





